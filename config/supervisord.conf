[unix_http_server]
file=/tmp/supervisor.sock                       ; path to your socket file

[supervisord]
logfile=/tmp/supervisord.log    			    ; supervisord log file
logfile_maxbytes=50MB                           ; maximum size of logfile before rotation
logfile_backups=10                              ; number of backed up logfiles
loglevel=error                                  ; info, debug, warn, trace
pidfile=/var/run/supervisord.pid                ; pidfile location
nodaemon=false                                  ; run supervisord as a daemon
minfds=1024                                     ; number of startup file descriptors
minprocs=200                                    ; number of process descriptors
user=root                                       ; default user
childlogdir=/tmp/               				; where child log files will live

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock         ; use a unix:// URL  for a unix socket

[inet_http_server] ; run the webserver as well to control it
port=*:9999

[program:flask-app]
directory=/home/flaskuser/annotationstation/app
command=/usr/local/bin/gunicorn app:app
stderr_logfile = /tmp/gunicorn-stderr.log
stdout_logfile = /tmp/gunicorn-stdout.log


[program:rqworker]
; Point the command to the specific rqworker command you want to run.
; If you use virtualenv, be sure to point it to
; /path/to/virtualenv/bin/rqworker
; Also, you probably want to include a settings module to configure this
; worker.  For more info on that, see http://python-rq.org/docs/workers/
command=/usr/local/bin/rqworker
process_name=%(program_name)s
; If you want to run more than one worker instance, increase this
numprocs=1
; This is the directory from which RQ is ran. Be sure to point this to the
; directory where your source code is importable from
directory=/home/flaskuser/annotationstation/app/
; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM
; These are up to you
autostart=true
autorestart=true

; this is actually just a flask app!
[program:rqdashboard]
directory=/home/flaskuser/
command=/usr/local/bin/rq-dashboard
stderr_logfile = /tmp/rqdash-stderr.log
stdout_logfile = /tmp/rqdash-stdout.log
autostart=true
autorestart=true